YUI.add("mojito-dispatcher",function(Y,NAME){"use strict";var _cacheInstances={},_cacheControllers={};Y.namespace("mojito").Dispatcher={init:function(resourceStore,rpcTunnel){if(!resourceStore){throw new Error("Mojito cannot instantiate without a resource store.")}this.store=resourceStore;this.tunnel=rpcTunnel;Y.log("Dispatcher created","debug",NAME);return this},_useController:function(command,adapter){var my=this,controllers=Y.mojito.controllers,instance=command.instance;Y.use(instance.controller,function(){if(controllers[instance.controller]){my._createActionContext(command,adapter)}else{adapter.error(new Error("Invalid controller name ["+instance.controller+"] for mojit ["+instance.type+"]."))}})},_createActionContext:function(command,adapter){var ac;Y.mojito.hooks.hook("dispatchCreateAction",adapter.hook,"start",command);if(!_cacheControllers[command.instance.instanceId]){_cacheControllers[command.instance.instanceId]=Y.mojito.util.heir(Y.mojito.controllers[command.instance.controller])}try{ac=new Y.mojito.ActionContext({command:command,controller:_cacheControllers[command.instance.instanceId],dispatcher:this,adapter:adapter,store:this.store})}catch(e){Y.log("Error from dispatch on instance '"+(command.instance.base||"@"+command.instance.type)+"':","error",NAME);Y.log(e.message,"error",NAME);Y.log(e.stack,"error",NAME);adapter.error(e)}Y.mojito.hooks.hook("dispatchCreateAction",adapter.hook,"end",command)},rpc:function(command,adapter){if(this.tunnel){command.rpc=false;Y.log('Dispatching instance "'+(command.instance.base||"@"+command.instance.type)+'" through RPC tunnel.',"info",NAME);this.tunnel.rpc(command,adapter)}else{adapter.error(new Error("RPC tunnel is not available in the ["+command.context.runtime+"] runtime."))}},dispatch:function(command,adapter){var my=this,store=this.store;Y.mojito.hooks.hook("dispatch",adapter.hook,"start",command);store.validateContext(command.context);if(command.rpc){Y.log("Command with rpc flag, dispatching through RPC tunnel","info",NAME);this.rpc(command,adapter);return}if(command.instance.instanceId&&_cacheInstances[command.instance.instanceId]){Y.log("Re-using instance with instanceId="+command.instance.instanceId,"info",NAME);command.instance=_cacheInstances[command.instance.instanceId];this._useController(command,adapter);return}store.expandInstance(command.instance,command.context,function(err,instance){Y.mojito.hooks.hook("dispatch",adapter.hook,"end",command);if(err||!instance||!instance.controller){Y.log('Cannot expand instance "'+(command.instance.base||"@"+command.instance.type)+'". Trying with the tunnel in case '+"it is a remote mojit.","info",NAME);if(err){Y.log(err,"warn",NAME)}my.rpc(command,adapter);return}_cacheInstances[instance.instanceId]=instance;command.instance=instance;my._useController(command,adapter)})}}},"0.1.0",{requires:["mojito-action-context","mojito-util","mojito-hooks"]});

YUI.add("mojito-action-context",function(Y,NAME){"use strict";var CHARSET="charset=utf-8",flush,done,error,serializer,CACHE={renderers:{}};function sanitizeChildren(children){if(!Y.Lang.isObject(children)){return children}Y.Object.each(children,function(v,k){children[k].params=undefined});return children}function sanitizeConfigCopy(cfg){var copy;if(!Y.Lang.isObject(cfg)){return cfg}copy=Y.mojito.util.copy(cfg);copy.children=sanitizeChildren(copy.children);return copy}function attachChildViewIdsToMetaChildren(children,binders){if(!children){return}Y.Object.each(binders,function(binderData,viewId){Y.Object.each(children,function(childData){if(binderData.instanceId===childData.instanceId){childData.viewId=viewId}})})}serializer={json:function(data,meta){meta.http.headers["content-type"]=["application/json; "+CHARSET];try{return Y.JSON.stringify(data)}catch(err){throw new Error("Expected JSON data, but there was a parse error"+' on the string: "'+data)}},xml:function(data,meta){function simpleXml(js,wraptag){if(js instanceof Object){return simpleXml(Y.Object.keys(js).map(function(key){return simpleXml(js[key],key)}).join("\n"),wraptag)}return(wraptag?"<"+wraptag+">":"")+js+(wraptag?"</"+wraptag+">":"")}meta.http.headers["content-type"]=["application/xml; "+CHARSET];if(Y.Lang.isObject){try{return simpleXml(data,"xml")}catch(err){throw new Error("Expected XML data, but there was a parse"+' error on the string: "'+err.message)}}return""}};function attachActionContextAddons(addons,command,adapter,ac,store){var i,addon,addonName,acAddons=command.instance.acAddons||[];Y.mojito.hooks.hook("attachActionContext",adapter.hook,"start",command);for(i=0;i<acAddons.length;i+=1){addonName=acAddons[i];if(addons[addonName]){addon=new addons[addonName](command,adapter,ac);if(addon.namespace){ac[addon.namespace]=addon;if(Y.Lang.isFunction(addon.setStore)){addon.setStore(store)}}}else{Y.log("["+addonName+"] addon was not found for mojit "+command.instance.type,"warn",NAME)}}Y.mojito.hooks.hook("attachActionContext",adapter.hook,"end",command)}function ActionContext(opts){var controller=opts.controller,command=opts.command,store=opts.store,actionFunction,error,my=this;Y.mojito.hooks.hook("actionContext",opts.adapter.hook,"start",my,opts);if(!command.action){command.action=command.instance.action||"index"}this.action=command.action;this.type=command.instance.type;this.context=command.context;this.dispatcher=opts.dispatcher;actionFunction=this.action;this.command=command;this.instance=command.instance;this._adapter=opts.adapter;this.staticAppConfig=store.getStaticAppConfig();this._dispatch=function(command,adapter){return my.dispatcher.dispatch(command,adapter)};attachActionContextAddons(Y.mojito.addons.ac,command,opts.adapter,this,store);if(!Y.Lang.isFunction(controller[actionFunction])){if(Y.Lang.isFunction(controller.__call)){actionFunction="__call"}else{error=new Error("No method '"+command.action+"' on controller type '"+command.instance.type+"'");error.code=404;throw error}}Y.mojito.hooks.hook("actionContext",opts.adapter.hook,"end1",my,opts);if(this.staticAppConfig.actionTimeout){this._timer=setTimeout(function(){var err,msg="Killing potential zombie context for Mojit type: "+my.instance.type+", controller: "+my.instance.controller+", action: "+actionFunction;my._timer=null;err=new Error(msg);err.code=408;my.error(err);my.done=function(){Y.log("ac.done() called after timeout. results lost","warn",NAME)}},this.staticAppConfig.actionTimeout)}controller[actionFunction](this);Y.mojito.hooks.hook("actionContext",opts.adapter.hook,"end2",my,opts)}ActionContext.prototype={flush:function(data,meta){return this.done(data,meta,true)},done:function(data,meta,more){if(this._timer){clearTimeout(this._timer);this._timer=null}var callbackFunc=more?"flush":"done",instance=this.command.instance,config=instance.config||{},context=this.command.context||{},adapter=this._adapter,action=this.command.action,mojitView,renderer=null,contentType;Y.mojito.hooks.hook("actionContextDone",adapter.hook,"start",this);if(Y.Lang.isString(meta)){if(serializer[meta]){meta={serialize:meta}}else{meta={view:{name:meta}}}}meta=meta||{};meta.assets=meta.assets||{};meta.assets.bottom=meta.assets.bottom||{};meta.assets.bottom.js=meta.assets.bottom.js||[];meta.http=meta.http||{};meta.http.code=meta.http.code||200;meta.http.headers=meta.http.headers||{};meta.view=meta.view||{};if(meta.serialize&&serializer[meta.serialize]){data=serializer[meta.serialize].apply(this,[data,meta]);meta.serialize=undefined}meta.view.name=meta.view.name||action;meta.view.binder=meta.view.binder||meta.view.name;mojitView=instance.views[meta.view.name];if(!meta.view.id){meta.view.id=Y.guid()}if(mojitView&&meta.view["content-path"]){mojitView["content-path"]=meta.view["content-path"]}if(mojitView&&meta.view.engine){mojitView.engine=meta.view.engine}if(mojitView&&mojitView.assets){meta.assets=Y.mojito.util.metaMerge(meta.assets,mojitView.assets)}meta.assets=Y.mojito.util.metaMerge(meta.assets,config.assets||{});Y.Object.each(this,function(item){if(item&&Y.Lang.isFunction(item.mergeMetaInto)){item.mergeMetaInto(meta)}});contentType=meta.http.headers["content-type"];attachChildViewIdsToMetaChildren(meta.children,meta.binders);if(!meta.binders){meta.binders={}}if(!meta.binders[meta.view.id]){if(meta.view.binder&&instance.binders&&instance.binders[meta.view.binder]){meta.binders[meta.view.id]={base:instance.base,name:instance.binders[meta.view.binder],action:action,config:sanitizeConfigCopy(instance.config),type:instance.type,viewId:meta.view.id,instanceId:instance.instanceId,children:sanitizeChildren(meta.children)}}}if(Y.Lang.isString(data)){if(!contentType){meta.http.headers["content-type"]=["text/plain; "+CHARSET]}adapter[callbackFunc](data,meta);Y.mojito.hooks.hook("actionContextDone",adapter.hook,"end1",this);return}if(mojitView){data=data||{};if(!contentType){meta.http.headers["content-type"]=["text/html; "+CHARSET]}data.mojit_guid=instance.instanceId;data.mojit_view_id=meta.view.id;data.mojit_assets=this.command.instance.assetsRoot;renderer=new Y.mojito.ViewRenderer(mojitView.engine,this.staticAppConfig.viewEngine);renderer.render(data,instance,mojitView,adapter,meta,more)}else{if(Y.Lang.isObject(data)){throw new Error("Missing view template: '"+meta.view.name+"'")}adapter[callbackFunc](data,meta)}Y.mojito.hooks.hook("actionContextDone",adapter.hook,"end2",this)},error:function(err){if(this._timer){clearTimeout(this._timer);this._timer=null}this._adapter.error(err)}};Y.namespace("mojito").ActionContext=ActionContext},"0.1.0",{requires:["mojito","json-stringify","event-custom-base","mojito-view-renderer","mojito-util","mojito-hooks"]});
